(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{159:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[t._m(0),e("p",[t._v("在本机安装并配置JAVA8，和Maven")]),t._m(1),e("p",[e("a",{attrs:{href:"https://signup.heroku.com/login",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方网站"),e("OutboundLink")],1),t._v(" （目前QQ邮箱和163等邮箱不能注册，需要使用sina、gmail、foxmail等进行注册）")]),t._m(2),e("p",[e("a",{attrs:{href:"https://devcenter.heroku.com/articles/getting-started-with-java#set-up",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击"),e("OutboundLink")],1),t._v("下载系统对应的安装包，"),e("code",[t._v("Heroku CLI")]),t._v("是用于创建、管理"),e("code",[t._v("Heroku")]),t._v("上应用的命令行工具")]),t._m(3),t._m(4),t._m(5),t._m(6),e("p",[t._v("在这个步骤中，你需要准备一个可以部署到heroku的简单应用程序，现在我们在GitHub上克隆官方推荐的工程。在命令行窗口执行：")]),t._m(7),e("p",[t._v("你现在有了一个包含pom.xml的本地仓库了，这是java的依赖管理工具maven用来管理项目的配置文件。")]),t._m(8),e("p",[t._v("在在这一步中我们需要把刚才的应用部署到Hero ku上面，首先我们在 Heroku 创建一个 app, 以便 Heroku 准备好接收你的代码。")]),t._m(9),t._m(10),e("p",[t._v("现在你可以往Heroku上部署代码了：")]),t._m(11),e("p",[t._v("应用现在已经部署了，确保至少一个 app 的实例正在运行:")]),t._m(12),e("p",[t._v("现在，可以用创建的包含 app 名称的 URL 访问 app. 有一个便捷的方法, 你可以像这样打开web站点:")]),t._m(13),t._m(14),e("p",[t._v("查看你正在运行的应用的日志流信息：")]),t._m(15),e("p",[t._v("日志进行过程中，CRTL + C 终止日志流")]),e("p",[e("a",{attrs:{href:"https://github.com/eskimo220/utadahikaru/wiki/%E3%80%90Log%E3%80%91Heroku%E5%B9%B3%E5%8F%B0%E4%B8%8A%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E7%9A%84%E8%BE%93%E5%87%BA20170901",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击此处"),e("OutboundLink")],1),t._v("在开发过程中查看程序日志和Heroku平台日志的方式")]),t._m(16),e("p",[t._v("Heroku 需要知道使用哪个命令启动程序。命令在一个名为Procfile(没有后缀)的特殊文件中指定。这个文件必须放在程序的顶级文件夹中。里面的内容看起来像这样的：")]),t._m(17),e("p",[t._v("Procfile文件内容的格式很简单:在每一行中指定一个任务名,后跟一个冒号,然后是执行这个任务的命令。名为web的任务比较特殊,Heroku 使用这个任务启动 Web 服务器。")]),e("p",[t._v("Heroku 会为这个任务提供一个PORT环境变量,用于设定程序监听请求的端口。如果设定了PORT变量, Gunicorn默认就会使用其中保存的值,因此无需将其包含在启动命令中。")]),e("p",[t._v("部署程序后,Heroku 会运行 Procfile 中列出的所有任务。")]),e("p",[e("a",{attrs:{href:"https://devcenter.heroku.com/articles/procfile#process-types-as-templates",target:"_blank",rel:"noopener noreferrer"}},[t._v("任务格式模板"),e("OutboundLink")],1)]),e("p",[t._v("程序可在 Procfile 中使用 web 之外的名字声明其他任务,例如程序所需的其他服务。")]),e("p",[e("a",{attrs:{href:"https://devcenter.heroku.com/articles/procfile#declaring-process-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("声明任务类型的方式"),e("OutboundLink")],1)]),t._m(18),e("p",[t._v("你可以使用ps命令来查看当前运行的Dyno数量：")]),t._m(19),e("p",[t._v("默认情况下，你的应用会被部署到一个免费的dyno上面，如果半小时之内没有请求就会进入到休眠状态。这会使进入休眠状态后的第一次请求可能会有几秒的延迟，但是后续的请求会被正常响应。免费的Dyno每月会有固定的限额，在免费时间没有被使用完的情况下，你的应用都会一直运行在上面。")]),e("p",[t._v("在Heroku平台上进行应用的扩展至需要改变运行Dyno的数量，例如把web dyno的数量变为零：")]),t._m(20),e("p",[t._v("这时候你再次使用heroku open命令打开你部署在上面的应用时，会发现报错信息，因为没有任何web dyno去处理你所发出的请求了。我们再此扩展回来：")]),t._m(21),t._m(22),t._m(23),e("p",[t._v("命令来创建一个pom.xml。我们部署在heroku上面的这个示例程序已经包含了一个pom.xml，以下是它的形式：")]),t._m(24),t._m(25),e("p",[t._v("另一个文件 system.properties决定要使用的java版本（heroku支持多种java版本）这个文件中的内容是可选的，如：")]),t._m(26),t._m(27),t._m(28)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备","aria-hidden":"true"}},[this._v("#")]),this._v(" 准备")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册","aria-hidden":"true"}},[this._v("#")]),this._v(" 注册")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"安装cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装cli","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装CLI")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("安装成功后，bin目录将被添加到"),a("code",[this._v("PATH")]),this._v("环境变量，")])},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("p",[t._v("下载并安装完成后，在 cmd 中输入"),e("code",[t._v("heroku login")]),t._v("，用创建"),e("code",[t._v("heroku")]),t._v("账号的"),e("code",[t._v("email")]),t._v("和"),e("code",[t._v("密码")]),t._v("登陆:")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("heroku login\nEnter your Heroku credentials.\nEmail: java@example.com\nPassword:\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"创建一个应用程序："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个应用程序：","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建一个应用程序：")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("git clone https://github.com/heroku/java-getting-started.git \ncd java-getting-started\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"部署应用："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署应用：","aria-hidden":"true"}},[this._v("#")]),this._v(" 部署应用：")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("heroku create\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("当你使用这一命令在heroku上创建了一个app时，一个远程git仓库就会被同步创建并且关联到你的本地git仓库上。（当你需要把一个程序绑定到远端仓库上时，可以使用heroku git:remote -a [你的应用名字]进行绑定），默认 Heroku 会为你的 app 生成一个随机的名字, 或者 你可以通过可选参数指定你的应用名。如："),a("code",[this._v("heroku create [NAME]。")]),this._v("注意名称必须以字母开始,只能包含小写字母,数字和连字符, 而且名称在 heroku 的所有程序中必须是唯一的。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("git push heroku master\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("heroku ps:scale web=1\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v(" heroku open\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"查看日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看日志","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看日志")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("heroku logs --tail\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"定义一个procfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义一个procfile","aria-hidden":"true"}},[this._v("#")]),this._v(" 定义一个Procfile:")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("web: java -jar target/java-getting-started-1.0.jar")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"扩展应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展应用","aria-hidden":"true"}},[this._v("#")]),this._v(" 扩展应用")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("heroku ps\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("heroku ps:scale web=0\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("heroku ps:scale web=1\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"声明应用依赖："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明应用依赖：","aria-hidden":"true"}},[this._v("#")]),this._v(" 声明应用依赖：")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Heroku通过存在根目录下的pom.xml来识别java应用程序，所以对于自己需要部署上去的应用，需要使用"),a("code",[this._v("mvn archetype:create")])])},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-actuator"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n          "),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-web"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("pom.xml指定了你需要安装在应用中的依赖，当应用部署完成后，heroku读取这个文件，使用"),a("code",[this._v("mvn clean install")]),this._v("这个命令来安装此应用所需要的依赖。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("code",[this._v("java.runtime.version=1.8")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("进入到你本地目录下，执行 "),a("code",[this._v("mvn clean install安装依赖，")]),this._v("以使这个应用在本地运行，注意这个应用需要JDK1.8版本，当然你部署自己的应用程序时可以使用任意的版本。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Maven 会根据依赖进行编译然后生成一个jar包，并放在target目录下，这个过程是在pom.xml中"),a("code",[this._v("spring-boot-maven-plugin")]),this._v("完成的")])}],!1,null,null,null);a.default=n.exports}}]);