(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{171:function(e,t,a){"use strict";a.r(t);var r=a(0),n=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"gitlab-ci与heroku集成部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci与heroku集成部署","aria-hidden":"true"}},[e._v("#")]),e._v(" gitlab-CI与Heroku集成部署")]),a("h2",{attrs:{id:"gitlab-ci-runner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci-runner","aria-hidden":"true"}},[e._v("#")]),e._v(" gitlab-CI Runner")]),a("p",[e._v("1.安装runner(省略)")]),a("p",[e._v("2.注册与配置runner(省略)")]),a("h2",{attrs:{id:"添加-gitlab-ci-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加-gitlab-ci-yml","aria-hidden":"true"}},[e._v("#")]),e._v(" 添加.gitlab-ci.yml")]),a("p",[e._v("在项目根目录下添加文件.gitlab-ci.yml")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('before_script:\n  - echo "install dpl deploy tool" \n\nstages:\n  - deploy\n\ndeploy to production:\n  stage: deploy\n  environment: production\n  tags:\n    - heroku\n  only:\n    - master\n  script: \n    - dpl --provider=heroku --app=gitlabtestci --api-key=$HEROKU_API_KEY\n')])])]),a("p",[e._v("以上为使用ssh runner，使用了本地服务器，所以在服务器安装了heroku-cli和dpl，如果使用docker或其他shared runner，可能需要在before-script处添加安装heroku或者dpl的过程\n示例如下")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('before_script:\n  - echo "install heroku" \n  - sudo curl https://cli-assets.heroku.com/install-ubuntu.sh | sh\n  - echo "install dpl deploy tool" \n  - sudo gem install dpl\n\nstages:\n  - deploy\n\ndeploy to production:\n  stage: deploy\n  environment: production\n  tags:\n    - heroku\n  only:\n    - master\n  script: \n    - dpl --provider=heroku --app=gitlabtestci --api-key=$HEROKU_API_KEY\n')])])]),a("h2",{attrs:{id:"附录-runner相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录-runner相关命令","aria-hidden":"true"}},[e._v("#")]),e._v(" 附录:Runner相关命令")]),a("p",[e._v("查看帮助：")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner run --help\n")])])]),a("p",[e._v("使用Debug模式启动")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner --debug <command>\n")])])]),a("p",[e._v("注册runner")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner register\n")])])]),a("p",[e._v("验证状态")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner verify\n")])])]),a("p",[e._v("启动gitlab-runner")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner run\n")])])]),a("p",[e._v("启动runner")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner start\n")])])]),a("p",[e._v("关闭runner")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner stop\n")])])]),a("p",[e._v("重启runner")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner restart\n")])])]),a("p",[e._v("查看runner状态")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gitlab-runner status\n")])])]),a("p",[e._v("配置文件目录：")]),a("p",[a("code",[e._v("/etc/gitlab-runner/config.toml on *nix systems when gitlab-runner is executed as super-user (root)")])]),a("p",[a("code",[e._v("~/.gitlab-runner/config.toml on *nix systems when gitlab-runner is executed as non-root")])]),a("p",[a("code",[e._v("./config.toml on other systems")])])])}],!1,null,null,null);t.default=n.exports}}]);